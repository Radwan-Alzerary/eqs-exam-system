<!DOCTYPE html>
<html class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@10.2.7/dist/css/autoComplete.02.min.css"
    />
    <script src="/js/jquery-3.6.3.min.js"></script>
    <script src="/js/qrcode.min.js"></script>
    <link href="/css/style.css" rel="stylesheet" />
    <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
    <script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="/js/JsBarcode.all.min.js"></script>
    <link href="/dist/output.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/barcode-generator@0.1.0/index.min.js"></script>
    <link href="/css/all.min.css" rel="stylesheet" />
    <style>
      body, html {
        margin: 0;
        padding: 0;
        height: 100%;
        background-color: #f8f8f8;
      }

      #a4Container {
        width: 210mm;
        height: 297mm;
        background-color: #EFE2CA;
        position: relative;
        margin: 1rem auto;
      }

      .invite-wrap {
        position: relative;
        width: 100%;
        height: 99mm;
        box-sizing: border-box;
        padding: 0.5rem;
      }

      .invite-wrap img {
        width: 100%;
        height: 100%;
      }

      .number-text {
        position: absolute;
        bottom: 7%;
        left: 50%;
        transform: translateX(-50%);
        color: #C78D1D;
        font-weight: bold;
        font-size: 1.4rem;
      }

      .name-text {
        position: absolute;
        display: flex;
        justify-content: center;
        bottom: 64%;
        text-align: center;
        left: 50%;
        transform: translateX(-50%);
        color: #C78D1D;
        width: 100%;
        font-weight: bold;
        font-size: 1.3rem;
      }

      .qrcode-area {
        position: absolute;
        bottom: 7.4rem;
        right: 3.2rem;
      }

      .barcode-area {
        position: absolute;
        top: 42%;
        right: 1.5%;
        transform: rotate(90deg);
        display: none;
      }
    </style>
  </head>

  <body style="direction: rtl;">
    <div class="flex justify-center items-center" style="margin: 1rem 0;">
      <input type="text" id="indstrial" placeholder="العنونة" />
      <input type="number" id="startNumber" placeholder="Start Number" />
      <input type="number" id="endNumber" placeholder="End Number" />
      <input type="text" id="pdfName" placeholder="Output PDF Name" />
      <select id="generateMode" class="me-2 mb-2">
        <option value="a4">Generate A4 (3 cards per page)</option>
        <option value="single">Generate Single Card (One per page)</option>
      </select>
      <button
        onclick="downloadMultipleImages()"
        type="button"
        class="text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
      >
        تحميل الصور
      </button>
    </div>

    <div id="a4Container">
      <div class="invite-wrap" id="invite1">
        <img src="/img/mock15.png" alt="" />
        <div class="number-text" id="number1"></div>
        <div class="name-text">
          <div>الى الكلية / </div>
          <div id="name1"></div>
        </div>
        <div class="qrcode-area" id="qrcode1"></div>
        <div class="barcode-area">
          <svg id="barcode1"></svg>
        </div>
      </div>
      <div class="invite-wrap" id="invite2">
        <img src="/img/mock15.png" alt="" />
        <div class="number-text" id="number2"></div>
        <div class="name-text">
          <div>الى الكلية / </div>
          <div id="name2"></div>
        </div>
        <div class="qrcode-area" id="qrcode2"></div>
        <div class="barcode-area">
          <svg id="barcode2"></svg>
        </div>
      </div>
      <div class="invite-wrap" id="invite3">
        <img src="/img/mock15.png" alt="" />
        <div class="number-text" id="number3"></div>
        <div class="name-text">
          <div>الى الكلية / </div>
          <div id="name3"></div>
        </div>
        <div class="qrcode-area" id="qrcode3"></div>
        <div class="barcode-area">
          <svg id="barcode3"></svg>
        </div>
      </div>
    </div>

    <script>
      const { jsPDF } = window.jspdf;

      async function downloadMultipleImages() {
  const startNumber = parseInt(document.getElementById("startNumber").value);
  const endNumber = parseInt(document.getElementById("endNumber").value);
  const pdfName = document.getElementById("pdfName").value || "invites.pdf";
  const generateMode = document.getElementById("generateMode").value;
  const totalInvites = endNumber - startNumber + 1;

  let pdf;
  if (generateMode === "single") {
    // Set PDF size to match the card size (e.g., 210mm x 99mm)
    pdf = new jsPDF({
      orientation: "landscape",
      unit: "mm",
      format: [99, 210], // Height x Width
    });
  } else {
    // Default A4 size for 3 cards per page
    pdf = new jsPDF("p", "mm", "a4");
  }

  let currentIndex = 0;

  if (generateMode === "a4") {
    while (currentIndex < totalInvites) {
      for (let i = 1; i <= 3; i++) {
        if (currentIndex >= totalInvites) {
          $(`#number${i}`).text("");
          $(`#qrcode${i}`).empty();
          $(`#barcode${i}`).empty();
          $(`#name${i}`).text("");
        } else {
          const inviteNumber = startNumber + currentIndex;
          $(`#number${i}`).text(inviteNumber);
          $(`#name${i}`).text(pdfName);

          $(`#qrcode${i}`).empty();
          $(`#barcode${i}`).empty();

          const indstrial = $("#indstrial").val();
          try {
            const response = await fetch("/visit/generate", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ indstrial,inviteNumber }),
            });
            if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
            }
            const data = await response.json();

            generateBarcode(data._id, `barcode${i}`);
            generateQrBarcode(
              `https://eqs.Niuraiq.com/c/${data._id}`,
              `qrcode${i}`
            );
          } catch (err) {
            console.error("Fetch error:", err);
          }
        }
        currentIndex++;
      }
      await new Promise((r) => setTimeout(r, 500));
      await addA4PageToPDF(pdf);

      if (currentIndex < totalInvites) {
        pdf.addPage();
      }
    }
  } else if (generateMode === "single") {
    while (currentIndex < totalInvites) {
      const inviteNumber = startNumber + currentIndex;

      $("#number1").text(inviteNumber);
      $("#name1").text(pdfName);

      $("#qrcode1").empty();
      $("#barcode1").empty();

      const indstrial = $("#indstrial").val();
      try {
        const response = await fetch("/visit/generate", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ indstrial,inviteNumber }),
        });
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        const data = await response.json();

        generateBarcode(data._id, "barcode1");
        generateQrBarcode(`https://eqs.Niuraiq/c/${data._id}`, "qrcode1");
      } catch (err) {
        console.error("Fetch error:", err);
      }

      await new Promise((r) => setTimeout(r, 500));
      await addSingleCardToPDF(pdf);

      if (currentIndex < totalInvites - 1) {
        pdf.addPage();
      }

      currentIndex++;
    }
  }

  pdf.save(pdfName);
}

async function addA4PageToPDF(pdf) {
  const targetDiv = document.getElementById("a4Container");
  const canvas = await html2canvas(targetDiv, { scale: 2 });
  const imgData = canvas.toDataURL("image/jpeg", 1.0);

  const pageWidth = pdf.internal.pageSize.getWidth();
  const pageHeight = pdf.internal.pageSize.getHeight();

  pdf.addImage(imgData, "JPEG", 0, 0, pageWidth, pageHeight);
}

async function addSingleCardToPDF(pdf) {
  const targetDiv = document.getElementById("invite1");
  const canvas = await html2canvas(targetDiv, { scale: 2 });
  const imgData = canvas.toDataURL("image/jpeg", 1.0);

  // Set the image dimensions to match the actual card size
  const cardWidth = 210; // mm
  const cardHeight = 99; // mm

  pdf.addImage(imgData, "JPEG", 0, 0, cardWidth, cardHeight);
}
      async function addA4PageToPDF(pdf) {
        const targetDiv = document.getElementById("a4Container");
        const canvas = await html2canvas(targetDiv, { scale: 2 });
        const imgData = canvas.toDataURL("image/jpeg", 1.0);

        const pageWidth = pdf.internal.pageSize.getWidth();
        const pageHeight = pdf.internal.pageSize.getHeight();

        pdf.addImage(imgData, "JPEG", 0, 0, pageWidth, pageHeight);
      }

      async function addSingleCardToPDF(pdf) {
        const targetDiv = document.getElementById("invite1");
        const canvas = await html2canvas(targetDiv, { scale: 2 });
        const imgData = canvas.toDataURL("image/jpeg", 1.0);

        const pageWidth = pdf.internal.pageSize.getWidth();
        const pageHeight = pdf.internal.pageSize.getHeight();

        pdf.addImage(imgData, "JPEG", 0, 0, pageWidth, pageHeight);
      }

      function generateBarcode(code, elementId) {
        JsBarcode(`#${elementId}`, code, {
          displayValue: false,
          background: "#00000000",
          height: 40,
          width: 1,
        });
      }

      function generateQrBarcode(code, elementId) {
        $(`#${elementId}`).html("");
        const qrcode = new QRCode(document.getElementById(elementId), {
          text: code,
          width: 118,
          height: 118,
          colorDark: "#000000",
          colorLight: "#00000000",
          correctLevel: QRCode.CorrectLevel.H,
        });

        setTimeout(function () {
          const canvas = document.querySelector(`#${elementId} canvas`);
          const context = canvas.getContext("2d");
          const imageData = context.getImageData(0, 0, canvas.width, canvas.height);
          const data = imageData.data;

          for (let i = 0; i < data.length; i += 4) {
            if (data[i] === 255 && data[i + 1] === 255 && data[i + 2] === 255) {
              data[i + 3] = 0;
            }
          }

          context.putImageData(imageData, 0, 0);
        }, 300);
      }
    </script>
  </body>
</html>
